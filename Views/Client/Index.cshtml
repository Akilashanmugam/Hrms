@model HrmsWeb.Models.ClientModel

@{ ViewBag.Title = "Index"; }


<h2>Clients </h2>
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" onclick="clearTextBox();">
    New Client
</button>
<br />
<br />
<div style="width: fit-content; height:fit-content">
    <table id="clientTable" class="table table-bordered table-hover">
        <thead class="bg-primary">
            <tr>
                <th>ID</th>
                <th>Client Name</th>
                <th>Client Short Name</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Last Updated By</th>
                <th>Last Updated Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody class="tbody" style="width:1px; white-space:nowrap;">
            <!-- Client records will be populated here -->
        </tbody>
    </table>
    <button type="button" class="btn btn-primary" onclick="history.back();">Back</button>
</div>

<div class="modal" data-backdrop="static" data-keyboard="false" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header btn-primary">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4 class="modal-title" id="myModalLabel">Add Client</h4>
            </div>

            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="ClientId">ClientId</label>
                        <input type="text" class="form-control" id="ClientId" placeholder="Id" disabled="disabled"  />
                    </div>
                   
                    <div class="form-group">
                        <label for="ClientName">Client Name</label>
                        <input type="text" class="form-control" id="ClientName" placeholder="Enter Client Name" onkeypress="checkEnter(event)" />
                    </div>

                    <div class="form-group">
                        <label for="ShortName">ClientShortName</label>
                        <input type="text" class="form-control" id="ClientShortName" placeholder="ShortName" />
                    </div>
                    <div class="form-group">
                        <label for="StartDate">StartDate</label>
                        <input type="date" class="form-control" id="StartDate" placeholder="StartDate" />
                    </div>
                    <div class="form-group">
                        <label for="EndDate">EndDate</label>
                        <input type="date" class="form-control" id="EndDate" placeholder="EndDate" />
                    </div>

                </form>

            </div>
            <div class="modal-footer">

                <button type="button" class="btn btn-primary" id="btnAdd" onclick="btnAdd_Click;">Save</button>
                <button type="submit" class="btn btn-primary" form="myModal" id="btnUpdate" style="display:none;" OnClick="btnUpdate_Click">Update</button>
                <button type="button" id="btnCancel" class="btn btn-danger" data-dismiss="modal">Cancel</button>

            </div>
        </div>
    </div>

</div>
@*-----------------ClientContactList-----------------*@
<div class="modal" data-backdrop="static" data-keyboard="false" id="ContactModal" tabindex="-1" role="dialog" aria-labelledby="ContactModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width:1250px;">
        <div class="modal-content">
            <div class="modal-header btn-primary">

                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="ContactModalLabel">Contact List</h4>

            </div>
            <div class="modal-body" style="overflow: scroll;">

                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ContactAddEditModal" onclick="ContactClearTextBox();">New Contact</button>
                <input type="hidden" id="txtClientId" />

                <div style="width: fit-content; height:fit-content">
                    <table id="ContactTable" class="table table-bordered table-hover">
                        <thead class="bg-primary">
                            <tr>
                                <th>ID</th>
                                <th>Client ID</th>
                                <th>Contact Name</th>
                                <th>Mobile No</th>
                                <th>Phone No</th>
                                <th>Email-Id</th>
                                <th>Department</th>
                                <th>Designation</th>
                                <th>Start Date</th>
                                <th>End Date</th>
                                <th>Last Updated By</th>
                                <th>Last Updated Date</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="ContactTableBody" class="tbody" style="width:1px; white-space:nowrap;">
                            <!-- Client records will be populated here -->
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnCloseContactModal" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal" data-backdrop="static" data-keyboard="false" id="ContactAddEditModal" tabindex="-1" role="dialog" aria-labelledby="ContactAddEditModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header btn-primary">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="ContactAddEditModalLabel">Contact Add/Edit</h4>
                <input type="hidden" id="txtContactId" />
            </div>
            <div class="modal-body">
                <div class="form-group row mb-0">
                    <label for="ContactId" class="col-sm-3 col-form-label">Contact ID</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" id="ContactId" placeholder="ID" disabled="disabled">
                    </div>
                </div>
                <div class="form-group row mb-0 mt-0">
                    <label for="ContactName" class="col-sm-3 col-form-label">Contact Name</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" id="ContactName" placeholder="ContactName" />
                    </div>
                </div>
                <div class="form-group row mb-0 mt-0">
                    <label for="MobileNo" class="col-sm-3 col-form-label">Mobile No</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" id="MobileNo" placeholder="Mobile No" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="PhoneNo" class="col-sm-3 col-form-label">Phone No</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" id="PhoneNo" placeholder="Phone No" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="EmailId" class="col-sm-3 col-form-label">Email Id</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" id="EmailId" placeholder="Email Id" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="Department" class="col-sm-3 col-form-label">Department</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" id="Department" placeholder="Department" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="Designation" class="col-sm-3 col-form-label">Designation</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" id="Designation" placeholder="Designation" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="StartDate" class="col-sm-3 col-form-label">StartDate</label>
                    <div class="col-sm-9">
                        <input type="date" class="form-control" id="ContactStartDate" placeholder="Start Date" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="EndDate" class="col-sm-3 col-form-label">End Date</label>
                    <div class="col-sm-9">
                        <input type="date" class="form-control" id="ContactEndDate" placeholder="End Date" />
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnContactAdd" onclick="btnContactAdd_Click;">Save</button>
                <button type="button" class="btn btn-primary" id="btnContactUpdate" style="display:none;" onclick="btnContactUpdate_Click;">Update</button>
                <button type="button" class="btn btn-danger" id="btnContactCancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

@*--------------Client SetUp------------------------*@
<div class="modal" data-backdrop="static" data-keyboard="false" id="ClientSetUpModal" tabindex="-1" role="dialog" aria-labelledby="ClientSetUpModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width:1050px;">
        <div class="modal-content">
            <div class="modal-header btn-primary">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4 class="modal-title" id="ClientSetUpModalLabel">Client Set Up</h4>
            </div>
            <div class="modal-body">
                <form>

                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#AddClientSetUpModal" onclick="ClearClientSetUpTextBox();">
                        Create
                    </button>
                    <input type="hidden" id="txtClientId4" />
                    <input type="hidden" id="txtClientSetUpId" />
                    <br />
                    <br />
                    <div>
                        <table class="table table-bordered table-hover " id="ClientSetUpTable">
                            <thead class="bg-primary">
                                <tr>
                                    <th>ID</th>
                                    <th>Project</th>
                                    <th>Location </th>
                                    <th>Maximum Billable Days</th>
                                    <th>Billing Period From</th>
                                    <th>Billing Period To</th>
                                    <th>Leaves Allowed Per_Month</th>
                                    <th>PAN No </th>
                                    <th>GSTIN No</th>
                                    <th>Valid From</th>
                                    <th>Valid To</th>
                                    <th>Last Updated By</th>
                                    <th>Last Updated Date</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody class="tbody" id="TBody" style="width:1px; white-space:nowrap;">
                                <!-- Company records will be populated here -->
                            </tbody>
                        </table>
                        <button type="button" class="btn btn-primary" onclick="history.back();">Back</button>
                    </div>


                </form>
            </div>

        </div>
    </div>
</div>

<div class="modal" data-backdrop="static" data-keyboard="false" id="AddClientSetUpModal" tabindex="-1" role="dialog" aria-labelledby="AddClientSetUpModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header btn-primary">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4 class="modal-title" id="AddClientSetUpModalLabel">Client Set Up</h4>
            </div>
            <div class="modal-body row">
                <form>
                    <div class="col-lg-5">
                        <div class="form-group">
                            <label for="ClientSetUpId">Id</label>
                            <input type="text" class="form-control" id="ClientSetUpId" placeholder="Client Set Up Id" disabled="disabled" />
                        </div>
                        <div class="form-group">
                            <label for="ClientId4" class="col-form-label">Client ID</label>
                            <input type="text" id="ClientId4" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label for="ProjectId" class="col-form-label">Project</label>
                            @Html.DropDownListFor(m => m.ProjectId, new SelectList(new List<SelectListItem> { new SelectListItem { Value = "0", Text = "-----Select-----" } }, "Value", "Text"), new { @class = "form-control", id = "ProjectId" })
                        </div>

                        <div class="form-group">
                            <label for="LocationId" class="col-form-label">Location </label>
                            @Html.DropDownListFor(m => m.LocationId, new SelectList(ViewBag.location, "LookUpDetailId", "LookUpDetailName"), new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label for="MaximumBillableDays">Maximum Billable Days</label>
                            <input type="text" class="form-control" id="MaximumBillableDays" placeholder="Maximum Billable Days" />
                        </div>
                        <div class="form-group">
                            <label for="BillingPeriodFrom">Billing Period From</label>
                            <input type="text" class="form-control" id="BillingPeriodFrom" placeholder="Billing Period From" />
                        </div>

                        <div class="form-group">
                            <label for="BillingPeriodTo">Billing Period To</label>
                            <input type="text" class="form-control" id="BillingPeriodTo" placeholder="Billing Period To" />
                        </div>

                    </div>
                    <div class="col-lg-5">

                        <div class="form-group">
                            <label for="LeavesAllowedPerMonth">Leaves Allowed Per Month</label>
                            <input type="text" class="form-control" id="LeavesAllowedPerMonth" placeholder="Leaves Allowed Per Month" />
                        </div>

                        <div class="form-group">
                            <label for="PanNo">Pan No</label>
                            <input type="text" class="form-control" id="PanNo" placeholder="Pan No" />
                        </div>
                        <div class="form-group">
                            <label for="GSTIN">GSTIN</label>
                            <input type="text" class="form-control" id="GSTIN" placeholder="GSTIN" />
                        </div>
                        <div class="form-group">
                            <label for="ValidFrom">Valid From</label>
                            <input type="date" class="form-control" id="ValidFrom" placeholder="ValidFrom" />
                        </div>
                        <div class="form-group">
                            <label for="ValidTo">Valid To</label>
                            <input type="date" class="form-control" id="ValidTo" placeholder="Valid To" />
                        </div>

                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnClientSetUpAdd" onclick="btnClientSetUpAdd_Click;">Save</button>
                <button type="button" class="btn btn-primary" id="btnClientSetUpUpdate" style="display:none;" onclick="btnClientSetUpUpdate_Click;">Update</button>
                <button type="button" id="btnClientSetUpCancel" class="btn btn-danger" data-dismiss="modal">Cancel</button>

            </div>
        </div>
    </div>
</div>


@section Scripts{
    <link href="//cdn.datatables.net/1.10.24/css/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="//cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.4/css/jquery.dataTables.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment-with-locales.min.js"></script>
    <link href="~/Scripts/MyScripts/StyleSheet.css" rel="stylesheet" />

    <script>
        $(document).ready(function () {
            loadData();

        });
        function loadData() {

            $.ajax({
                url: "/Client/List",
                type: "GET",
                dataType: "json",
                success: function (data) {
                    $('#clientTable').DataTable({
                        "bDestroy": true,
                        data: data,
                        columns: [
                            { data: "ClientId" },
                            { data: "ClientName" },
                            { data: "ClientShortName" },
                            {
                                data: "StartDate",
                                render: function (data) {
                                    var date1 = moment(data).format("DD-MM-YYYY");
                                    if (date1 == '01-01-0001') {
                                        return null;
                                    } else {
                                        return moment(data).format("DD-MM-YYYY");
                                    }
                                }
                            },
                            {
                                data: "EndDate",
                                render: function (data) {
                                    var date1 = moment(data).format("DD-MM-YYYY")
                                    if (date1 == '01-01-0001') {
                                        return null;
                                    } else {
                                        return moment(data).format("DD-MM-YYYY");
                                    }
                                }
                            },
                            { data: "LastUpdatedByName" },
                            {
                                data: "LastUpdatedDate",
                                render: function (data) {
                                    var date1 = moment(data).format("DD-MM-YYYY");
                                    if (date1 == '01-01-0001') {
                                        return null;
                                    } else {
                                        return moment(data).format("DD-MM-YYYY");
                                    }
                                }
                            },
                            {
                                data: null,
                                render: function (data) {
                                    var h1 = '<a href="#" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#myModal" onclick="getbyId(' + data.ClientId + ')"></a>';
                                    var h2 = '<a href="#" class="glyphicon glyphicon-trash" style="color: red; padding-left: 15px;" onclick="Delete(' + data.ClientId + ')"></a>';
                                    var h3 = '<a href="#" id="btnShowContactModal" class="glyphicon glyphicon-new-window" data-toggle="modal" data-target="#ContactModal" style="color: blue; padding-left: 15px;" onclick="loadDataContact(' + data.ClientId + ')" title="Client Contact"></a>';
                                    var h5 = '<a id="ClientSetUp" href="#" class="glyphicon glyphicon-tag" style="color: #4B0082; padding-left: 15px;" data-toggle="modal" data-target="#ClientSetUpModal" onclick="LoadClientSetUp(\'' + data.ClientId + '\')" title="Client SetUp"></a>';
                                    var h4 = h1 + h2 + h3 + h5;
                                    return h4;
                                }
                            }


                        ],
                        "initComplete": function (settings, json) {
                            // Validate first page
                            if (json.recordsTotal > 0) {
                                $("#clientTable").DataTable().page(0).draw(false);
                            }

                            // Modify pagination buttons
                            $('.paginate_button').on('click', function () {
                                if ($(this).hasClass('disabled')) {
                                    return false;

                                }
                            });
                        }
                    });
                }
            });
        }
        function Add() {

            var clientObj = {
                ClientId: $('#ClientId').val(),
                ClientName: $('#ClientName').val(),
                ClientShortName: $('#ClientShortName').val(),
                StartDate: $('#StartDate').val(),
                EndDate: $('#EndDate').val()

            };

            $.ajax({
                url: "/Client/Add",
                data: JSON.stringify(clientObj),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    loadData();
                    $('#myModal').modal('hide');
                    $('#ClientId').val("");
                    $('#ClientName').val("");
                    $('#ClientShortName').val("");
                    $('#StartDate').val("");
                    $('#EndDate').val("");

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
            return false;
        }
        function getbyId(ClientId) {
            $('#ClientName').css('border-color', 'lightgrey');
            $('#ClientShortName').css('border-color', 'lightgrey');
            $('#StartDate').css('border-color', 'lightgrey');
            $('#EndDate').css('border-color', 'lightgrey');

            $.ajax({
                url: "/Client/getbyID/" + ClientId,
                type: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {

                    $('#ClientId').val(result.ClientId);
                    $('#ClientName').val(result.ClientName);
                    $('#ClientShortName').val(result.ClientShortName);

                    var datam = moment(result.StartDate);
                    var StartDate = datam.format("YYYY-MM-DD");
                    if (StartDate == '0001-01-01') {
                        $('#StartDate').val(null);
                    } else {
                        $('#StartDate').val(StartDate);
                    }

                    var datam = moment(result.EndDate);
                    var EndDate = datam.format("YYYY-MM-DD");
                    if (EndDate == '0001-01-01') {
                        $('#EndDate').val(null);
                    } else {
                        $('#EndDate').val(EndDate);
                    }

                    $('#btnUpdate').show();
                    $('#btnAdd').hide();

                },

                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
            return false;
        }
        $('#btnAdd').click(function (e) {

            allok = 0
            msg = ''

            var clientname = $('#ClientName').val();
            var clientshortname = $('#ClientShortName').val();
            var startdate = $('#StartDate').val();
            var enddate = $('#EndDate').val();

            if (clientname.length == 0) {
                allok = allok + 1
                msg = 'Client Name : Cannot be empty.'
            }
            if (clientshortname.length == 0) {
                allok = allok + 1
                msg = 'Client Short Name : Cannot be empty.'
            }

            if ((startdate == null || startdate == '') && (enddate != null && enddate != '')) {
                allok = allok + 1
                alert('Cannot enter End Date, if Start Date is blank.');
                msg = msg + ',' + 'End Date : Cannot enter End Date, if Start Date is blank.'
            }

            if (enddate != null && enddate != '') {
                if (startdate != null && startdate != '') {
                    var datam = moment($('#StartDate').val());
                    var dt1 = datam

                    var datam = moment($('#EndDate').val());
                    var dt2 = datam

                    if ((enddate < startdate) == true) {
                        allok = allok + 1
                        msg = msg + ',' + 'Start/End Dates Invalid';

                    }

                }
            }

            if (allok > 0) {
                alert(msg)
                e.preventDefault();
            }
            if (allok == 0) {
                //Update date into Database
                Add()
                $("#btnCancel").trigger("click");


            }


        });
        $('#btnUpdate').click(function (e) {

            allok = 0
            msg = ''

            var clientname = $('#ClientName').val();
            var clientshortname = $('#ClientShortName').val();
            var startdate = $('#StartDate').val();
            var enddate = $('#EndDate').val();

            if (clientname.length == 0) {
                allok = allok + 1
                msg = 'Client Name : Cannot be empty.'
            }
            if (clientshortname.length == 0) {
                allok = allok + 1
                msg = 'Client Short Name : Cannot be empty.'
            }
            if ((startdate == null || startdate == '') && (enddate != null && enddate != '')) {
                allok = allok + 1
                alert('Cannot enter End Date, if  Start Date is blank.');
                msg = msg + ',' + 'End Date : Cannot enter End Date, if Start Date is blank.'
            }

            if (enddate != null && enddate != '') {
                if (startdate != null && startdate != '') {
                    var datam = moment($('#StartDate').val());
                    var dt1 = datam

                    var datam = moment($('#EndDate').val());
                    var dt2 = datam

                    if ((enddate < startdate) == true) {
                        allok = allok + 1
                        msg = msg + ',' + 'Start/End Dates Invalid';


                    }

                }
            }


            if (allok > 0) {
                alert(msg)
                e.preventDefault();
            }
            if (allok == 0) {
                //Update date into Database

                Update()
                $("#btnCancel").trigger("click");


            }


        });
        function Update() {

            var clientObj = {
                ClientId: $('#ClientId').val(),
                ClientName: $('#ClientName').val(),
                ClientShortName: $('#ClientShortName').val(),
                StartDate: $('#StartDate').val(),
                EndDate: $('#EndDate').val(),

            };
            $.ajax({
                url: "/Client/Update",
                data: JSON.stringify(clientObj),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    loadData();

                    $('#ClientId').val("");
                    $('#ClientName').val("");
                    $('#ClientShortName').val("");
                    $('#StartDate').val("");
                    $('#EndDate').val("");

                }
            });
        }
        function Delete(ID) {
            var ans = confirm("Are you sure you want to delete this ID?");
            if (ans) {
                $.ajax({
                    url: "/Client/Delete/" + ID,
                    type: "POST",
                    contentType: "application/json;charset=UTF-8",
                    dataType: "json",
                    success: function (result) {
                        loadData()
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }
        }
        function clearTextBox() {
            $('#ClientId').val("");
            $('#ClientName').val("");
            $('#ClientShortName').val("");
            $('#StartDate').val("");
            $('#EndDate').val("");

            $('#btnUpdate').hide();
            $('#btnAdd').show();
            $('#ClientName').css('border-color', 'lightgrey');
            $('#ClientShortName').css('border-color', 'lightgrey');
            $('#StartDate').css('border-color', 'lightgrey');
            $('#EndDate').css('border-color', 'lightgrey');

        }
        ///*******************************ClientContact Scripts******************************************/

        function loadDataContact(id) {
            $('#txtClientId').val(id)

            $.ajax({
                url: "/Client/ContactList/" + id,
                type: "GET",
                dataType: "json",
                success: function (data) {
                    $('#ContactTable').DataTable({
                        "bDestroy": true,
                        data: data,

                        columns: [
                            { data: "ContactId" },
                            { data: "ClientId", "visible": false },
                            { data: "ContactName" },
                            { data: "MobileNo" },
                            { data: "PhoneNo" },
                            { data: "EmailId" },
                            { data: "Department" },
                            { data: "Designation" },
                            {
                                data: "StartDate",
                                render: function (data) {
                                    var date1 = moment(data).format("DD-MM-YYYY");
                                    if (date1 == '01-01-0001') {
                                        return null;
                                    } else {
                                        return moment(data).format("DD-MM-YYYY");
                                    }
                                }
                            },
                            {
                                data: "EndDate",
                                render: function (data) {
                                    var date1 = moment(data).format("DD-MM-YYYY")
                                    if (date1 == '01-01-0001') {
                                        return null;
                                    } else {
                                        return moment(data).format("DD-MM-YYYY");
                                    }
                                }
                            },
                            { data: "LastUpdatedByName" },
                            {
                                data: "LastUpdatedDate",
                                render: function (data) {
                                    var date1 = moment(data).format("DD-MM-YYYY");
                                    if (date1 == '01-01-0001') {
                                        return null;
                                    } else {
                                        return moment(data).format("DD-MM-YYYY");
                                    }
                                }
                            },


                            {
                                data: null,

                                render: function (data) {
                                    var h1 = '<a href="#" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#ContactAddEditModal" onclick=ContactGetById(' + data.ContactId + ')/a>'
                                    var h2 = '<a href = "#" id=" + row.id + "class="glyphicon glyphicon-trash" style = "color: red;padding-left:15px " onclick=ContactDelete(' + data.ContactId + ')/a>'
                                    var h3 = h1 + h2
                                    return h3
                                }
                            }
                        ],
                        "initComplete": function (settings, json) {
                            if (json.recordsTotal > 0) {
                                $("#ContactTable").DataTable().page(0).draw(false);
                            }


                            $('.paginate_button').on('click', function () {
                                if ($(this).hasClass('disabled')) {
                                    return false;

                                }
                            });
                        }
                    });
                }
            });
        }
        $('#btnContactAdd').click(function (e) {


            $('#txtContactId').val('');
            allok = 0
            msg = ''

            var ContactName = $('#ContactName').val();
            var stdt = $('#ContactStartDate').val();
            var endt = $('#ContactEndDate').val();

            if (ContactName.length == 0) {
                allok = allok + 1
                msg = 'Contact Name : Cannot be empty.'
            }

            if ((stdt == null || stdt == '') && (endt != null && endt != '')) {
                allok = allok + 1
                alert('Cannot enter End Date, if Start Date is blank.');
                msg = msg + ',' + 'End Date : Cannot enter End Date, if Start Date is blank.'
            }

            if (endt != null && endt != '') {
                if (stdt != null && stdt != '') {
                    var datam = moment($('#ContactStartDate').val());
                    var dt1 = datam

                    var datam = moment($('#ContactEndDate').val());
                    var dt2 = datam

                    if ((dt2 < dt1) == true) {
                        allok = allok + 1
                        msg = msg + ',' + 'Start/End Dates Invalid';

                    }

                }
            }

            if (allok > 0) {
                alert(msg)
                e.preventDefault();
            }
            if (allok == 0) {
                /*Add date into Database*/

                ContactAdd()
                $("#btnContactCancel").trigger("click");


            }


        });
        function ContactAdd() {
            var cid = $('#txtClientId').val();

            var ContactObj = {
                ClientId: $('#txtClientId').val(),
                ContactName: $('#ContactName').val(),
                MobileNo: $('#MobileNo').val(),
                PhoneNo: $('#PhoneNo').val(),
                EmailId: $('#EmailId').val(),
                Department: $('#Department').val(),
                Designation: $('#Designation').val(),
                StartDate: $('#ContactStartDate').val(),
                EndDate: $('#ContactEndDate').val()

            };

            $.ajax({
                url: "/Client/ContactAdd",
                data: JSON.stringify(ContactObj),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $('#ContactId').val("");
                    $('#ClientId').val("");
                    $('#ContactName').val("");
                    $('#MobileNo').val("");
                    $('#PhoneNo').val("");
                    $('#EmailId').val("");
                    $('#Department').val("");
                    $('#Designation').val("");
                    $('#ContactStartDate').val("");
                    $('#ContactEndDate').val("");
                    $.ajax({
                        url: "/Client/ContactList/" + cid,
                        type: "GET",
                        dataType: "json",
                        success: function (data) {
                            $('#ContactTable').DataTable({
                                "bDestroy": true,
                                data: data,

                                columns: [
                                    { data: "ContactId" },
                                    { data: "ClientId", "visible": false },
                                    { data: "ContactName" },
                                    { data: "MobileNo" },
                                    { data: "PhoneNo" },
                                    { data: "EmailId" },
                                    { data: "Department" },
                                    { data: "Designation" },
                                    {
                                        data: "StartDate",
                                        render: function (data) {
                                            var date1 = moment(data).format("DD-MM-YYYY");
                                            if (date1 == '01-01-0001') {
                                                return null;
                                            } else {
                                                return moment(data).format("DD-MM-YYYY");
                                            }
                                        }
                                    },
                                    {
                                        data: "EndDate",
                                        render: function (data) {
                                            var date1 = moment(data).format("DD-MM-YYYY")
                                            if (date1 == '01-01-0001') {
                                                return null;
                                            } else {
                                                return moment(data).format("DD-MM-YYYY");
                                            }
                                        }
                                    },
                                    { data: "LastUpdatedByName" },
                                    {
                                        data: "LastUpdatedDate",
                                        render: function (data) {
                                            var date1 = moment(data).format("DD-MM-YYYY");
                                            if (date1 == '01-01-0001') {
                                                return null;
                                            } else {
                                                return moment(data).format("DD-MM-YYYY");
                                            }
                                        }
                                    },
                                    {
                                        data: null,

                                        render: function (data) {
                                            var h1 = '<a href="#" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#ContactAddEditModal" onclick=ContactGetById(' + data.ContactId + ')/a>'
                                            var h2 = '<a href = "#" id=" + row.id + "class="glyphicon glyphicon-trash" style = "color: red;padding-left:15px " onclick=ContactDelete(' + data.ContactId + ')/a>'
                                            var h3 = h1 + h2
                                            return h3
                                        }
                                    }
                                ],
                            });

                        }
                    });

                    ContactClearTextBox()

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }

            });


        }
        $('#btnContactUpdate').click(function (e) {

            allok = 0
            msg = ''
            var ContactName = $('#ContactName').val();
            var stdt = $('#ContactStartDate').val();
            var endt = $('#ContactEndDate').val();

            if (ContactName.length == 0) {
                allok = allok + 1
                msg = 'Contact Name : Cannot be empty.'
            }

            if ((stdt == null || stdt == '') && (endt != null && endt != '')) {
                allok = allok + 1
                alert('Cannot enter End Date, if Start Date is blank.');
                msg = msg + ',' + 'End Date : Cannot enter End Date, if Start Date is blank.'
            }

            if (endt != null && endt != '') {
                if (stdt != null && stdt != '') {
                    var datam = moment($('#ContactStartDate').val());
                    var dt1 = datam

                    var datam = moment($('#ContactEndDate').val());
                    var dt2 = datam

                    if ((dt2 < dt1) == true) {
                        allok = allok + 1
                        msg = msg + ',' + 'Start/End Dates Invalid';

                    }

                }
            }

            if (allok > 0) {
                alert(msg)
                e.preventDefault();
            }
            if (allok == 0) {
                /*Add date into Database*/


                ContactUpdate()
                $("#btnContactCancel").trigger("click");

            }



        });
        function ContactUpdate() {
            var cid = $('#ClientId').val();
            var contactObj = {
                ContactId: $('#ContactId').val(),
                ClientId: $('#ClientId').val(),
                ContactName: $('#ContactName').val(),
                MobileNo: $('#MobileNo').val(),
                PhoneNo: $('#PhoneNo').val(),
                EmailId: $('#EmailId').val(),
                Department: $('#Department').val(),
                Designation: $('#Designation').val(),
                StartDate: $('#ContactStartDate').val(),
                EndDate: $('#ContactEndDate').val(),

            };

            $.ajax({
                url: "/Client/ContactUpdate",
                data: JSON.stringify(contactObj),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                /* dataType: "json",*/
                success: function (result) {
                    $.ajax({
                        url: "/Client/ContactList/" + cid,
                        type: "GET",
                        dataType: "json",
                        success: function (data) {
                            $('#ContactTable').DataTable({
                                "bDestroy": true,
                                data: data,
                                columns: [
                                    { data: "ContactId" },
                                    { data: "ClientId", "visible": false },
                                    { data: "ContactName" },
                                    { data: "MobileNo" },
                                    { data: "PhoneNo" },
                                    { data: "EmailId" },
                                    { data: "Department" },
                                    { data: "Designation" },
                                    {
                                        data: "StartDate",
                                        render: function (data) {
                                            var date1 = moment(data).format("DD-MM-YYYY");
                                            if (date1 == '01-01-0001') {
                                                return null;
                                            } else {
                                                return moment(data).format("DD-MM-YYYY");
                                            }
                                        }
                                    },
                                    {
                                        data: "EndDate",
                                        render: function (data) {
                                            var date1 = moment(data).format("DD-MM-YYYY")
                                            if (date1 == '01-01-0001') {
                                                return null;
                                            } else {
                                                return moment(data).format("DD-MM-YYYY");
                                            }
                                        }
                                    },
                                    { data: "LastUpdatedByName" },
                                    {
                                        data: "LastUpdatedDate",
                                        render: function (data) {
                                            var date1 = moment(data).format("DD-MM-YYYY");
                                            if (date1 == '01-01-0001') {
                                                return null;
                                            } else {
                                                return moment(data).format("DD-MM-YYYY");
                                            }
                                        }
                                    },
                                    {
                                        data: null,

                                        render: function (data) {
                                            var h1 = '<a href="#" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#ContactAddEditModal" onclick=ContactGetById(' + data.ContactId + ')/a>'
                                            var h2 = '<a href = "#" id=" + row.id + "class="glyphicon glyphicon-trash" style = "color: red;padding-left:15px " onclick=ContactDelete(' + data.ContactId + ')/a>'
                                            var h3 = h1 + h2
                                            return h3
                                        }
                                    }
                                ],
                            });

                        }
                    });

                    ContactClearTextBox()

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });


        }
        function ContactGetById(id) {


            $('#ContactId').css('border-color', 'lightgrey');
            $('#ContactName').css('border-color', 'lightgrey');
            $('#MobileNo').css('border-color', 'lightgrey');
            $('#PhoneNo').css('border-color', 'lightgrey');
            $('#EmailId').css('border-color', 'lightgrey');
            $('#Department').css('border-color', 'lightgrey');
            $('#Designation').css('border-color', 'lightgrey');
            $('#ContactStartDate').css('border-color', 'lightgrey');
            $('#ContactEndDate').css('border-color', 'lightgrey');

            $.ajax({
                url: "/Client/ContactGetById/" + id,
                type: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {
                    $('#ContactId').val(id);
                    $('#ClientId').val(result.ClientId);
                    $('#ContactName').val(result.ContactName);
                    $('#MobileNo').val(result.MobileNo);
                    $('#PhoneNo').val(result.PhoneNo);
                    $('#EmailId').val(result.EmailId);
                    $('#Department').val(result.Department);
                    $('#Designation').val(result.Designation);

                    var datam = moment(result.StartDate);
                    var StartDate = datam.format("YYYY-MM-DD");
                    if (StartDate == '0001-01-01') {
                        $('#ContactStartDate').val(null);
                    } else {
                        $('#ContactStartDate').val(StartDate);
                    }

                    var datam = moment(result.EndDate);
                    var EndDate = datam.format("YYYY-MM-DD");
                    if (EndDate == '0001-01-01') {
                        $('#ContactEndDate').val(null);
                    } else {
                        $('#ContactEndDate').val(EndDate);
                    }

                    $('#btnContactUpdate').show();
                    $('#btnContactAdd').hide();

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
            return false;
        }
        function ContactDelete(ContactId) {
            var cid = $('#txtClientId').val();
            var ans = confirm("Are you sure you want to delete this Record?");
            if (ans) {
                $.ajax({
                    url: "/Client/ContactDelete/" + ContactId,
                    type: "POST",
                    contentType: "application/json;charset=UTF-8",
                    dataType: "json",
                    success: function (result) {
                        /*   Reload Contact List Startr*/
                        alert(cid);
                        $.ajax({
                            url: "/Client/ContactList/" + cid,
                            type: "GET",
                            dataType: "json",
                            success: function (data) {
                                $('#ContactTable').DataTable({
                                    "bDestroy": true,
                                    data: data,

                                    columns: [
                                        { data: "ContactId" },
                                        { data: "ClientId", "visible": false },
                                        { data: "ContactName" },
                                        { data: "MobileNo" },
                                        { data: "PhoneNo" },
                                        { data: "EmailId" },
                                        { data: "Department" },
                                        { data: "Designation" },
                                        {
                                            data: "StartDate",
                                            render: function (data) {
                                                var date1 = moment(data).format("DD-MM-YYYY");
                                                if (date1 == '01-01-0001') {
                                                    return null;
                                                } else {
                                                    return moment(data).format("DD-MM-YYYY");
                                                }
                                            }
                                        },
                                        {
                                            data: "EndDate",
                                            render: function (data) {
                                                var date1 = moment(data).format("DD-MM-YYYY")
                                                if (date1 == '01-01-0001') {
                                                    return null;
                                                } else {
                                                    return moment(data).format("DD-MM-YYYY");
                                                }
                                            }
                                        },
                                        { data: "LastUpdatedByName" },
                                        {
                                            data: "LastUpdatedDate",
                                            render: function (data) {
                                                var date1 = moment(data).format("DD-MM-YYYY");
                                                if (date1 == '01-01-0001') {
                                                    return null;
                                                } else {
                                                    return moment(data).format("DD-MM-YYYY");
                                                }
                                            }
                                        },
                                        {
                                            data: null,

                                            render: function (data) {
                                                var h1 = '<a href="#" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#ContactAddEditModal" onclick=ContactGetById(' + data.ContactId + ')/a>'
                                                var h2 = '<a href = "#" id=" + row.id + "class="glyphicon glyphicon-trash" style = "color: red;padding-left:15px " onclick=ContactDelete(' + data.ContactId + ')/a>'
                                                var h3 = h1 + h2
                                                return h3
                                            }
                                        }
                                    ],
                                });

                            }
                        });

                        /*   Reload Contact List End*/
                        $("#btnContactCancel").trigger("click");
                    }
                });
            };
        }
        function ContactClearTextBox() {

            $('#ContactId').val("");
            $('#ClientId').val("");
            $('#ContactName').val("");
            $('#MobileNo').val("");
            $('#PhoneNo').val("");
            $('#EmailId').val("");
            $('#Department').val("");
            $('#Designation').val("");
            $('#ContactStartDate').val("");
            $('#ContactEndDate').val("");

            $('#btnContactUpdate').hide();
            $('#btnContactAdd').show();

            $('#ContactId').css('border-color', 'lightgrey');
            $('#ClientId').css('border-color', 'lightgrey');
            $('#ContactName').css('border-color', 'lightgrey');
            $('#MobileNo').css('border-color', 'lightgrey');
            $('#PhoneNo').css('border-color', 'lightgrey');
            $('#EmailId').css('border-color', 'lightgrey');
            $('#Department').css('border-color', 'lightgrey');
            $('#Designation').css('border-color', 'lightgrey');
            $('#ContactStartDate').css('border-color', 'lightgrey');
            $('#ContactEndDate').css('border-color', 'lightgrey');


        }

      /* -------- client set up crud opertaion---------- */
        

        $(document).ready(function () {
           
            $('#ClientId4').change(function () {
                var clientId = $(this).val();
                console.log("Client ID from input box: ", clientId);
                updateProjectDropdown(clientId);
            });
        
           function updateProjectDropdown(clientId, selectedProjectId = null) {
                if (clientId) {
                    console.log("Updating project dropdown with Client ID: ", clientId);
                    $.ajax({
                        url: "/ClientBilling/GetProjectsByClientId/",
                        type: 'GET',
                        data: { clientId: clientId },
                        success: function (data) {
                            console.log("Data received: ", data);
                            var projectDropdown = $('#ProjectId');
                            projectDropdown.empty();
                            projectDropdown.append($('<option/>', {
                                value: 0,
                                text: "-----Select-----"
                            }));
                            $.each(data, function (index, item) {
                                projectDropdown.append($('<option/>', {
                                    value: item.ProjectId,
                                    text: item.ProjectName
                                }));
                            });
                            if (selectedProjectId !== null) {
                                projectDropdown.val(selectedProjectId);
                            } else {
                                projectDropdown.val(0);
                            }
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.error("Error fetching projects:", textStatus, errorThrown);
                        }
                    });
                } else {
                    console.log("Client ID is empty or invalid");
                    $('#ProjectId').empty();
                    $('#ProjectId').append($('<option/>', {
                        value: 0,
                        text: "-----Select-----"
                    }));
                }
            }
        });
        function LoadClientSetUp(id) {
            $('#txtClientId4').val(id);
            $.ajax({
                url: "/ClientSetUp/List/" + id,
                type: "GET",
                dataType: "json",
                success: function (data) {
                    $('#ClientSetUpTable').DataTable({
                        scrollX: true,
                        pagingType: 'full',
                        scrollY: '250px',
                        data: data,
                        "bDestroy": true,
                        columns: [
                            { data: "ClientSetUpId" },
                            { data: "ProjectName" },
                            { data: "LocationName" },
                            { data: "MaximumBillableDays" },
                            { data: "BillingPeriodFrom" },
                            { data: "BillingPeriodTo" },
                            { data: "LeavesAllowedPerMonth" },
                            { data: "PanNo" },
                            { data: "GSTIN" },
                            {
                                data: "ValidFrom",
                                render: function (data) {
                                    var date1 = moment(data).format("DD-MM-YYYY");
                                    return date1 == '01-01-0001' ? null : date1;
                                }
                            },
                            {
                                data: "ValidTo",
                                render: function (data) {
                                    var date1 = moment(data).format("DD-MM-YYYY");
                                    return date1 == '01-01-0001' ? null : date1;
                                }
                            },
                            { data: "UserName" },
                            {
                                data: "LastUpdatedDate",
                                render: function (data) {
                                    var date1 = moment(data).format("DD-MM-YYYY");
                                    return date1 == '01-01-0001' ? null : date1;
                                }
                            },
                            {
                                data: null,
                                render: function (data) {
                                    var h1 = '<a href="#" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#AddClientSetUpModal" onclick=CSUEdit(' + data.ClientSetUpId + ')/a>';
                                    var h2 = '<a href="#" class="glyphicon glyphicon-trash" style="color: red; padding-left: 15px;" onclick=CSUDelete(' + data.ClientSetUpId + ')/a>';

                                    return h1 + h2;
                                }
                            }
                        ],
                        "initComplete": function (settings, json) {
                            if (json.recordsTotal > 0) {
                                $("#ClientSetUpTable").DataTable().page(0).draw(false);
                            }
                            $('.paginate_button').on('click', function () {
                                if ($(this).hasClass('disabled')) {
                                    return false;
                                }
                            });
                        }
                    });
                }
            });
        }
        $('#btnClientSetUpAdd').click(function (e) {

            allok = 0
            msg = ' WARNING!!! \n'

            var cname = $('#ProjectId').val();
            var ValidFrom = $('#ValidFrom').val();
            var ValidTo = $('#ValidTo').val();

            if (cname.length == 0) {
                allok = allok + 1
                msg = msg + '\nProjectName Cannot be Empty.\n';
            }
            if ((ValidFrom == null || ValidFrom == '') && (ValidTo != null && ValidTo != '')) {
                allok = allok + 1
                msg = msg + ',' + '\n End Date : Cannot enter End Date, if Start Date is blank.\n';
            }

            if (ValidTo != null && ValidTo != '') {
                if (ValidFrom != null && ValidFrom != '') {
                    var datam = moment($('#ValidFrom').val());
                    var dt1 = datam

                    var datam = moment($('#ValidTo').val());
                    var dt2 = datam

                    if ((dt2 < dt1) == true) {
                        allok = allok + 1
                        msg = msg + '\n Invalid Dates, Please Enter The Correct StartDate & EndDate.\n';

                    }

                }
            }

            if (allok > 0) {
                alert(msg)
                e.preventDefault();
            }
            if (allok == 0) {

                CSUAdd()
                $("#btnClientSetUpCancel").trigger("click");


            }

        });
        function CSUAdd(id) {
            var id = $('#txtClientId4').val();
            var CSUObj = {
                ClientId: $('#txtClientId4').val(),
                ProjectId: $('#ProjectId').val(),
                LocationId: $('#LocationId').val(),
                MaximumBillableDays: $('#MaximumBillableDays').val(),
                BillingPeriodFrom: $('#BillingPeriodFrom').val(),
                BillingPeriodTo: $('#BillingPeriodTo').val(),
                LeavesAllowedPerMonth: $('#LeavesAllowedPerMonth').val(),
                PanNo: $('#PanNo').val(),
                GSTIN: $('#GSTIN').val(),
                ValidFrom: $('#ValidFrom').val(),
                ValidTo: $('#ValidTo').val(),
                LastUpdatedBy: $('#LastUpdatedBy').val(),
                LastUpdatedDate: $('#LastUpdatedDate').val(),


            };

            $.ajax({
                url: "/ClientSetUp/Add/" ,
                data: JSON.stringify(CSUObj),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                success: function (result) {
                    $.ajax({
                        url: "/ClientSetUp/List/" +id ,
                        type: "GET",
                        dataType: "json",
                        success: function (data) {
                            $('#ClientSetUpTable').DataTable({
                                scrollX: true,
                                pagingType: 'full',
                                scrollY: '250px',
                                data: data,
                                "bDestroy": true,
                                columns: [
                                    { data: "ClientSetUpId" },
                                    { data: "ProjectName" },
                                    { data: "LocationName" },
                                    { data: "MaximumBillableDays" },
                                    { data: "BillingPeriodFrom" },
                                    { data: "BillingPeriodTo" },
                                    { data: "LeavesAllowedPerMonth" },
                                    { data: "PanNo" },
                                    { data: "GSTIN" },
                                    {
                                        data: "ValidFrom",
                                        render: function (data) {
                                            var date1 = moment(data).format("DD-MM-YYYY");
                                            if (date1 == '01-01-0001') {
                                                return null;
                                            } else {
                                                return moment(data).format("DD-MM-YYYY");
                                            }
                                        }
                                    },
                                    {
                                        data: "ValidTo",
                                        render: function (data) {
                                            var date2 = moment(data).format("DD-MM-YYYY");
                                            if (date2 == '01-01-0001') {
                                                return null;
                                            } else {
                                                return moment(data).format("DD-MM-YYYY");
                                            }
                                        }
                                    },

                                    { data: "UserName" },
                                    {
                                        data: "LastUpdatedDate",
                                        render: function (data) {
                                            var date3 = moment(data).format("DD-MM-YYYY");
                                            if (date3 == '01-01-0001') {
                                                return null;
                                            } else {
                                                return moment(data).format("DD-MM-YYYY");
                                            }
                                        }
                                    },
                                    {
                                        data: null,
                                        render: function (data) {
                                            var h1 = '<a href="#" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#AddClientSetUpModal" onclick=Edit(' + data.ClientSetUpId + ')/a> ';
                                            var h2 = '<a href="#" class="glyphicon glyphicon-trash" style="color: red;padding-left:15px " onclick=Delete(' + data.ClientSetUpId + ')/a> ';
                                            var h3 = h1 + h2;
                                            return h3;
                                        }
                                    }
                                ],

                            });
                        }
                    });
                    clearClientSetUpTextBox();
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
            return false;
        }
        function CSUEdit(CSUID) {
            $.ajax({
                url: "/ClientSetUp/GetbyID/" + CSUID,
                type: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {
                    $('#ClientSetUpId').val(CSUID);
                    $('#ClientId').val(result.ClientId);
                    $('#LocationId').val(result.LocationId);
                    $('#MaximumBillableDays').val(result.MaximumBillableDays);
                    $('#BillingPeriodFrom').val(result.BillingPeriodFrom);
                    $('#BillingPeriodTo').val(result.BillingPeriodTo);
                    $('#LeavesAllowedPerMonth').val(result.LeavesAllowedPerMonth);
                    $('#PanNo').val(result.PanNo);
                    $('#GSTIN').val(result.GSTIN);
                    $('#LastUpdatedBy').val(result.LastUpdatedBy);
                    $('#LastUpdatedDate').val(result.LastUpdatedDate);

                    var datam = moment(result.ValidFrom);
                    var ValidFrom = datam.format("YYYY-MM-DD");
                    if (ValidFrom == '0001-01-01') {
                        $('#ValidFrom').val(null);
                    } else {
                        $('#ValidFrom').val(ValidFrom);
                    }

                    var datam = moment(result.ValidTo);
                    var ValidTo = datam.format("YYYY-MM-DD");
                    if (ValidTo == '0001-01-01') {
                        $('#ValidTo').val(null);
                    } else {
                        $('#ValidTo').val(ValidTo);
                    }

                    $('#btnClientSetUpUpdate').show();
                    $('#btnClientSetUpAdd').hide();

                    updateProjectDropdown(result.ClientId, result.ProjectId);
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
            return false;
        }
        $('#btnClientSetUpUpdate').click(function (e) {

            allok = 0
            msg = ' WARNING!!! \n'
            var cname = $('#ProjectId').val();
            var SD1 = $('#ValidFrom').val();
            var ED1 = $('#ValidTo').val();

            if (cname.length == 0) {
                allok = allok + 1
                msg = msg + '\nProjectName Cannot be Empty.\n';
            }

            if ((SD1 == null || SD1 == '') && (ED1 != null && ED1 != '')) {
                allok = allok + 1

                msg = msg + ',' + '\n End Date : Cannot enter End Date, if Start Date is blank.\n';

            }

            if (ED1 != null && ED1 != '') {
                if (SD1 != null && SD1 != '') {
                    var datam = moment($('#ValidFrom').val());
                    var dt2 = datam

                    var datam = moment($('#ValidTo').val());
                    var dt3 = datam

                    if ((dt3 < dt2) == true) {
                        allok = allok + 1
                        msg = msg + '\n Invalid Dates, Please Enter The Correct StartDate & EndDate.\n';
                    }

                }
            }

            if (allok > 0) {
                alert(msg)
                e.preventDefault();
            }
            if (allok == 0) {

                CSUUpdate()
                $("#btnClientSetUpCancel").trigger("click");

            }

        });
        function CSUUpdate() {
            var id = $('#txtClientId4').val();
            var CSUObj = {
                ClientSetUpId: $('#ClientSetUpId').val(),
                ProjectId: $('#ProjectId').val(),
                LocationId: $('#LocationId').val(),
                MaximumBillableDays: $('#MaximumBillableDays').val(),
                BillingPeriodFrom: $('#BillingPeriodFrom').val(),
                BillingPeriodTo: $('#BillingPeriodTo').val(),
                LeavesAllowedPerMonth: $('#LeavesAllowedPerMonth').val(),
                PanNo: $('#PanNo').val(),
                GSTIN: $('#GSTIN').val(),
                ValidFrom: $('#ValidFrom').val(),
                ValidTo: $('#ValidTo').val(),
                LastUpdatedBy: $('#LastUpdatedBy').val(),
                LastUpdatedDate: $('#LastUpdatedDate').val(),


            };
            $.ajax({
                url: "/ClientSetUp/Update/",
                data: JSON.stringify(CSUObj),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $.ajax({
                        url: "/ClientSetUp/List/" + id,
                        type: "GET",
                        dataType: "json",
                        success: function (data) {
                            $('#ClientSetUpTable').DataTable({
                                scrollX: true,
                                pagingType: 'full',
                                scrollY: '250px',
                                data: data,
                                "bDestroy": true,
                                columns: [
                                    { data: "ClientSetUpId" },
                                    { data: "ProjectName" },
                                    { data: "LocationName" },
                                    { data: "MaximumBillableDays" },
                                    { data: "BillingPeriodFrom" },
                                    { data: "BillingPeriodTo" },
                                    { data: "LeavesAllowedPerMonth" },
                                    { data: "PanNo" },
                                    { data: "GSTIN" },
                                    {
                                        data: "ValidFrom",
                                        render: function (data) {
                                            var date1 = moment(data).format("DD-MM-YYYY");
                                            if (date1 == '01-01-0001') {
                                                return null;
                                            } else {
                                                return moment(data).format("DD-MM-YYYY");
                                            }
                                        }
                                    },
                                    {
                                        data: "ValidTo",
                                        render: function (data) {
                                            var date2 = moment(data).format("DD-MM-YYYY");
                                            if (date2 == '01-01-0001') {
                                                return null;
                                            } else {
                                                return moment(data).format("DD-MM-YYYY");
                                            }
                                        }
                                    },

                                    { data: "UserName" },
                                    {
                                        data: "LastUpdatedDate",
                                        render: function (data) {
                                            var date3 = moment(data).format("DD-MM-YYYY");
                                            if (date3 == '01-01-0001') {
                                                return null;
                                            } else {
                                                return moment(data).format("DD-MM-YYYY");
                                            }
                                        }
                                    },
                                    {
                                        data: null,
                                        render: function (data) {
                                            var h1 = '<a href="#" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#AddClientSetUpModal" onclick=Edit(' + data.ClientSetUpId + ')/a> ';
                                            var h2 = '<a href="#" class="glyphicon glyphicon-trash" style="color: red;padding-left:15px " onclick=Delete(' + data.ClientSetUpId + ')/a> ';
                                            var h3 = h1 + h2;
                                            return h3;
                                        }
                                    }
                                ],

                            });
                        }
                    });
                    clearClientSetUpTextBox();
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
        function CSUDelete(ID) {
            var id = $('#txtClientId4').val();
            var ans = confirm("Are you sure you want to delete this ID?");
            if (ans) {
                $.ajax({
                    url: "/ClientSetUp/Delete/" + ID,
                    type: "POST",
                    contentType: "application/json;charset=UTF-8",
                    dataType: "json",
                    success: function (result) {
                        $.ajax({
                            url: "/ClientSetUp/List/" + id,
                            type: "GET",
                            dataType: "json",
                            success: function (data) {
                                $('#ClientSetUpTable').DataTable({
                                    scrollX: true,
                                    pagingType: 'full',
                                    scrollY: '250px',
                                    data: data,
                                    "bDestroy": true,
                                    columns: [
                                        { data: "ClientSetUpId" },
                                        { data: "ProjectName" },
                                        { data: "LocationName" },
                                        { data: "MaximumBillableDays" },
                                        { data: "BillingPeriodFrom" },
                                        { data: "BillingPeriodTo" },
                                        { data: "LeavesAllowedPerMonth" },
                                        { data: "PanNo" },
                                        { data: "GSTIN" },
                                        {
                                            data: "ValidFrom",
                                            render: function (data) {
                                                var date1 = moment(data).format("DD-MM-YYYY");
                                                if (date1 == '01-01-0001') {
                                                    return null;
                                                } else {
                                                    return moment(data).format("DD-MM-YYYY");
                                                }
                                            }
                                        },
                                        {
                                            data: "ValidTo",
                                            render: function (data) {
                                                var date2 = moment(data).format("DD-MM-YYYY");
                                                if (date2 == '01-01-0001') {
                                                    return null;
                                                } else {
                                                    return moment(data).format("DD-MM-YYYY");
                                                }
                                            }
                                        },

                                        { data: "UserName" },
                                        {
                                            data: "LastUpdatedDate",
                                            render: function (data) {
                                                var date3 = moment(data).format("DD-MM-YYYY");
                                                if (date3 == '01-01-0001') {
                                                    return null;
                                                } else {
                                                    return moment(data).format("DD-MM-YYYY");
                                                }
                                            }
                                        },
                                        {
                                            data: null,
                                            render: function (data) {
                                                var h1 = '<a href="#" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#AddClientSetUpModal" onclick=Edit(' + data.ClientSetUpId + ')/a> ';
                                                var h2 = '<a href="#" class="glyphicon glyphicon-trash" style="color: red;padding-left:15px " onclick=Delete(' + data.ClientSetUpId + ')/a> ';
                                                var h3 = h1 + h2;
                                                return h3;
                                            }
                                        }
                                    ],

                                });
                            }
                        });
                        clearClientSetUpTextBox();
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }
        }
        function clearClientSetUpTextBox() {
            $('#ClientSetUpId').val("");
            $('#ProjectId').val(0);
            $('#LocationId').val(0);
            $('#MaximumBillableDays').val("");
            $('#BillingPeriodFrom').val("");
            $('#BillingPeriodTo').val("");
            $('#LeavesAllowedPerMonth').val("");
            $('#PanNo').val("");
            $('#GSTIN').val("");
            $('#ValidFrom').val("");
            $('#ValidTo').val("");


            $('#btnClientSetUpUpdate').hide();
            $('#btnClientSetUpAdd').show();


        }
    </script>
}

